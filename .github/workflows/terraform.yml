name: Terraform

on:
  pull_request:
  push:
    branches: ["main"]

jobs:
  determine-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          matrix=$(yq e -o=json '.environments | sort_by(.order)' environments.yml 2>/dev/null || echo '[]')
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  tf-plan:
    needs: determine-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJSON(needs.determine-matrix.outputs.matrix) }}
    permissions:
      actions: read
      checks: write
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create plugin cache
        run: |
          mkdir -p $HOME/.terraform.d/plugin-cache
          echo "TF_PLUGIN_CACHE_DIR=$HOME/.terraform.d/plugin-cache" >> $GITHUB_ENV

      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: terraform-${{ runner.os }}-${{ hashFiles('.terraform.lock.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform plan ${{ matrix.environment.name }}
        uses: op5dev/tf-via-pr@v13
        with:
          working-directory: .
          command: plan
          arg-var-file: env/${{ matrix.environment.name }}.tfvars
          plan-encrypt: ${{ secrets.TF_PASSPHRASE }}
          validate: true
          format: true

  tf-apply:
    needs: [determine-matrix, tf-plan]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        environment: ${{ fromJSON(needs.determine-matrix.outputs.matrix) }}
    environment: ${{ matrix.environment.name }}
    permissions:
      actions: read
      checks: write
      contents: read
      id-token: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create plugin cache
        run: |
          mkdir -p $HOME/.terraform.d/plugin-cache
          echo "TF_PLUGIN_CACHE_DIR=$HOME/.terraform.d/plugin-cache" >> $GITHUB_ENV

      - name: Cache Terraform providers
        uses: actions/cache@v4
        with:
          path: ~/.terraform.d/plugin-cache
          key: terraform-${{ runner.os }}-${{ hashFiles('.terraform.lock.hcl') }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform apply ${{ matrix.environment.name }}
        uses: op5dev/tf-via-pr@v13
        with:
          working-directory: .
          command: apply
          arg-lock: true
          arg-var-file: env/${{ matrix.environment.name }}.tfvars
          plan-encrypt: ${{ secrets.TF_PASSPHRASE }}
          validate: true
          format: true
