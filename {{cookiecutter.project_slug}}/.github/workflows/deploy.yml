name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment name"
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: '${{ github.event.inputs.environment }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '{{ cookiecutter.terraform_version }}'

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          allow-no-subscriptions: true

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="resource_group_name=$BACKEND_RG" \
            -backend-config="storage_account_name=$BACKEND_STORAGE_ACCOUNT" \
            -backend-config="container_name=$BACKEND_CONTAINER" \
            -backend-config="key=$BACKEND_KEY"
        env:
          BACKEND_RG: ${{ secrets.BACKEND_RG }}
          BACKEND_STORAGE_ACCOUNT: ${{ secrets.BACKEND_STORAGE_ACCOUNT }}
          BACKEND_CONTAINER: ${{ secrets.BACKEND_CONTAINER }}
          BACKEND_KEY: ${{ secrets.BACKEND_KEY }}

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          PORT_CLIENT_ID: ${{ secrets.PORT_CLIENT_ID }}
          PORT_CLIENT_SECRET: ${{ secrets.PORT_CLIENT_SECRET }}

